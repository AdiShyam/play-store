{"version":3,"sources":["history.jsx","component/App-ThumbNail.jsx","component/ApplicationList.jsx","component/Category-Container.jsx","component/InstallApplication.jsx","APIs/jsonPlaceHolder.js","component/App.js","index.js"],"names":["createHistory","require","createBrowserHistory","AppThumbNail","renderThumbNail","appData","className","src","image","alt","title","handleClick","el","props","selectedApp","onClick","this","React","Component","ApplicationList","handleAppCick","application","setState","selectedApplication","state","appStoreList","category","map","to","key","id","appListData","renderAppList","CategoryContainer","handleSelectedApp","data","appStoreObject","containerDOM","push","renderCategoryContainer","InstallApplication","ispwa","installationState","applcaiton","description","console","log","renderbuttons","isPWA","applcationDetail","renderContent","axios","create","baseURL","getData","a","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","response","json","App","componentDidMount","jsonPlaceHolder","get","response1","forEach","randomNumber","Math","floor","random","i","faker","name","findName","avatar","Boolean","round","developerName","lorem","paragraphs","applicationSelected","hasOwnProperty","history","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1ba7c831.chunk.js","sourcesContent":["// import createHistory from 'history/createBrowserHistory';\nconst createHistory = require(\"history\").createBrowserHistory;\n\nexport default createHistory();","import React from 'react';\nimport './App-ThumbNail.css'\n\nclass AppThumbNail extends React.Component {\n\n    renderThumbNail = (appData) => {\n        return (\n        <div>\n            <img className =\"thumb-nail-image\" src = {appData.image} alt={appData.title}/>\n        </div>)\n    }\n\n    handleClick = (el) => {        \n        this.props.selectedApp(this.props.appData);\n    }\n\n    render() {\n        return(\n            <div onClick= {this.handleClick} className =\"thumb-nail-container\">\n                {this.renderThumbNail(this.props.appData)}\n                <div className=\"thumb-nail-title\">{this.props.appData.title}</div>\n            </div>\n        )\n    }\n\n}\n\nexport default AppThumbNail;\n","import React from 'react';\nimport AppThumbNail from './App-ThumbNail';\nimport { Link } from 'react-router-dom';\n\nclass ApplicationList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedApp: {},\n        }\n    }\n\n    handleAppCick = (application) => {\n        this.setState({selectedApp: application })\n        this.props.selectedApplication(application);\n    }\n\n    renderAppList(appStoreList, category) {\n        if(appStoreList) {\n            // console.log(\"this is appStore data\", appStoreList);\n            return ( appStoreList.map((application) => {\n                const { title } = application;\n                return (<Link className=\"application-list-Link\" to={`/person/${category}/${title}`} key={title} id={title}\n                    onClick = {this.handleAppCick} >\n                    <AppThumbNail selectedApp= {this.handleAppCick} key={title} appData={application} />\n                </Link>)\n            }))\n        }\n        return null\n    }\n\n\n    render() {\n        const appStoreList = this.props.appListData;\n        const category = this.props.category;\n        return(\n            <div className= \"applciation-list-container\">\n                {this.renderAppList(appStoreList, category)}\n            </div>\n        )\n    }\n}\n\nexport default ApplicationList;\n","import React from 'react';\nimport './Category-Container.css';\nimport ApplicationList from './ApplicationList';\n\nclass CategoryContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedApp: {}\n        }\n    }\n\n    handleSelectedApp = (data) => {\n        this.props.selectedApp(data);\n    }\n\n    renderCategoryContainer(appStoreObject) {\n        const containerDOM = []\n        for (var category in appStoreObject) {\n            // console.log(\"the category object is \", category);\n            containerDOM.push(\n                <div className=\"category-container-wrapper\" key={category}>\n                    <div className = \"category-container-title thumb-nail-title\">{category}</div>\n                    <ApplicationList selectedApplication = {this.handleSelectedApp}category = {category} appListData={appStoreObject[category]} />\n                </div>\n            );\n        }\n        return containerDOM;\n    }\n\n\n    render() {\n        return (\n            <div className = \"category-container\">\n                <header className=\"app-store-header\">App Store</header>\n                {this.renderCategoryContainer(this.props.appStoreObject)}\n            </div>\n        )\n    }\n\n}\n\nexport default CategoryContainer;\n","import React from 'react';\nimport  \"./InstallApplication.css\";\n\nclass InstallApplication extends React.Component {\n\n    isPWA(ispwa) {\n        if(ispwa) {\n            return (<span className=\"pwd-content\">PWA</span>)\n        }\n    }\n\n    renderbuttons(installationState) {\n        if (installationState === \"installed\") {\n            return (\n                <div className=\"install-applcation-title-button-wrapper\">\n                    <button className=\"install-applcation-title-button-open custom-button\" id=\"open\">\n                        Open\n                    </button>\n                    <button className=\"install-applcation-title-button-uninstall custom-button\" id=\"uninstall\">\n                        uninstall\n                    </button>\n                </div>)\n        } else {\n            return (\n                <div className=\"install-applcation-title-button-wrapper\">\n                    <button className=\"install-applcation-title-button-open custom-button\" id=\"install\">\n                        install\n                    </button>\n                </div>\n            )\n        }\n    }\n\n    renderContent(applcaiton) {\n        const {title, image, description, installationState, ispwa} = applcaiton;\n        console.log(\"the applcaiton isss\", applcaiton);\n        return (\n            <div className = \"install-application-wrapper\">\n                <div className = \"install-application-header\">\n                    <div className= \"install-application-image-wrapper\">\n                        <img className = \"install-application-image\" src={image} alt={title} />\n                    </div>\n                    <div className = \"install-application-title-wrapper\">\n                        <div className=\"install-application-title\">\n                            {title}\n                        </div>\n                        <div className = \"install-applcation-title-button-wrapper\">\n                            {this.renderbuttons(installationState)}\n                        </div>\n                    </div>\n                    {this.isPWA(ispwa)}\n                </div>\n                <div className=\"install-applcation-description\">\n                    Description: <br />\n                    {description}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        console.log(\"The prop details are as follow\", this.props.application);\n        const applcationDetail = this.props.application;\n        return this.renderContent(applcationDetail);\n    }\n}\n\nexport default InstallApplication","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:6555/v1/'\n});\n\nexport const getData = async(url = '', data = {}) => {\n    // Default options are marked with *\n    debugger;\n    try {\n      const response = await fetch(url, {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/js',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, PUT, POST\",\n          \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *client\n      });\n      return await response.json(); // parses JSON response into native JavaScript objects\n    } catch(e) {\n      console.log(\"The error is \",e);\n      return;\n    }\n  }\n","import React from 'react';\nimport faker from 'faker';\nimport './App.css';\nimport {Router, Switch, Route} from 'react-router-dom';\nimport history from '../history';\nimport CategoryContainer from './Category-Container';\nimport InstallApplication from './InstallApplication';\nimport jsonPlaceHolder, {getData} from '../APIs/jsonPlaceHolder';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      appStoreList: [],\n      appStoreObject: {},\n      applicationSelected: {}\n    }\n  } \n  componentDidMount = async() => {\n    debugger;\n    const response = await getData(\"http://localhost:6555/v1/list?categories=All\");\n    var response1 = await jsonPlaceHolder.get(\"/list?categories=All\");\n    console.log(\"the response is s\", response);\n    console.log(\"the second response is \", response1);\n    debugger;\n\n    let appStoreList = [];\n    const appStoreObject = {};\n    const applciationCategory = [\"Social\", \"Music\", \"Video\", \"Travel\", \"Tools\", \"Games\", \"Shopping\" , \"Photos\", \"Reading\", \"Sports\", \"Health\", \"Education\"]\n    applciationCategory.forEach(category => {\n      let randomNumber = Math.floor(Math.random() * 20) + 1;\n      appStoreList = [];\n      for (let i=0; i<randomNumber; i++) {\n        let application = {};\n        application.ispwa = true;\n        application.title = faker.name.findName();\n        application.image = faker.image.avatar();\n        application.installationState = (Boolean(Math.round(Math.random())))? \"installed\": \"uninstalled\";\n        application.developerName = faker.name.findName();\n        application.description = faker.lorem.paragraphs();\n        appStoreList.push(application);\n      }\n      appStoreObject[category] = appStoreList;\n    });\n    this.setState({ appStoreObject, appStoreList });\n  }\n\n  handleSelectedApp = (applicationSelected) => {\n    if(applicationSelected.hasOwnProperty('title'))\n      this.setState({ applicationSelected })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history = {history} >\n          <Switch>\n            <Route exact path=\"/\" render={() => <CategoryContainer appStoreObject={this.state.appStoreObject} selectedApp = {this.handleSelectedApp} />} />\n            <Route path=\"/person/:id\" render={() => <InstallApplication application={this.state.applicationSelected} />} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}